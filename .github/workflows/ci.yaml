# CI for Product Catalog Service
name: product-catalog-ci

on: 
    pull_request:
        branches:
        - main
    workflow_dispatch:
        
permissions:
  contents: write


jobs:
    build:
        runs-on: QA-CI

        steps:
        - name: checkout code
          uses: actions/checkout@v4

        - name: Setup Go 1.22
          uses: actions/setup-go@v2
          with:
            go-version: 1.22
        
        - name: Build
          run: |
            cd src/product-catalog
            go mod download
            go build -o product-catalog-service main.go

        - name: unit tests
          run: |
            cd src/product-catalog
            go test ./...
    
    code-quality:
        runs-on: QA-CI

        steps:
        - name: checkout code
          uses: actions/checkout@v4
        
        - name: Setup Go 1.22
          uses: actions/setup-go@v2
          with:
           go-version: 1.22
        
        - name: Run golangci-lint
          uses: golangci/golangci-lint-action@v6
          with:
            version: v1.55.2
            run: golangci-lint run
            working-directory: src/product-catalog 
            
    docker-build:
        runs-on: QA-CI

        needs: build

        steps:
        - name: checkout code
          uses: actions/checkout@v4
        
        - name: Install Docker 
          uses: docker/setup-buildx-action@v1

        - name: Set Image Tag (Git SHA)
          id: set_tag
          run: echo "sha_tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT


        - name: Login to Docker hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_TOKEN }}
        
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ secrets.AWS_REGION }}
              
        - name: Log in to Amazon ECR
          uses: aws-actions/amazon-ecr-login@v1

       
        - name: Build and Push Docker image
          uses: docker/build-push-action@v6
          with:
            context: src/product-catalog
            file: src/product-catalog/Dockerfile
            push: true
            platforms: linux/amd64
            tags: |
              ${{ secrets.DOCKER_USERNAME }}/product-catalog:${{github.run_id}}
              ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/product-catalog:${{ github.run_id }}
           
          

        
    updatek8s:    
        runs-on: QA-CI
        needs: [docker-build]
        
        steps:
        - name: checkout code
          uses: actions/checkout@v4
          with:
            token: ${{ secrets.GITHUB_TOKEN }}

        - name: Update tag in k8s deployment manifest
          run: |
              sed -i "s|image: .*/product-catalog:.*|image: ${{ secrets.DOCKER_USERNAME }}/product-catalog:${{ github.run_id }}|" kubernetes/productcatalog/deploy.yaml

        
        - name: Commit and push changes
          run: |
             git config --global user.email "chandrakatore@gmail.com"
             git config --global user.name "chandrakatore@gmail.com"
             git add kubernetes/productcatalog/deploy.yaml
             git commit -m "[CI]: Update product catalog service image tag to ${{github.run_id}}"       
             git push origin HEAD:main -f


    
  
